// Generated by CoffeeScript 1.2.1-pre
(function() {
  var BaseModel, StoryPart,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  BaseModel = require('./basemodel').BaseModel;

  StoryPart = (function(_super) {

    __extends(StoryPart, _super);

    StoryPart.name = 'StoryPart';

    function StoryPart() {
      this.getValue = __bind(this.getValue, this);
      return StoryPart.__super__.constructor.apply(this, arguments);
    }

    StoryPart._meta = {
      type: StoryPart,
      collection: 'storyparts'
    };

    StoryPart.prototype.getValue = function() {
      if (this.type === "HEADER") {
        if (this.value.level === "H1") return "# " + this.value.text;
        if (this.value.level === "H2") return "## " + this.value.text;
        if (this.value.level === "H3") return "### " + this.value.text;
        if (this.value.level === "H4") return "#### " + this.value.text;
        if (this.value.level === "H5") return "##### " + this.value.text;
        if (this.value.level === "H6") return "###### " + this.value.text;
      }
      if (this.type === "IMAGE") {
        return "![" + this.value.alt + "] (" + this.value.link + ")";
      }
      if (this.type === "RAW") return this.value;
    };

    return StoryPart;

  })(BaseModel);

  exports.StoryPart = StoryPart;

}).call(this);
