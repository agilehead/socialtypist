// Generated by CoffeeScript 1.3.1
(function() {
  var StoryEditView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  StoryEditView = (function() {

    StoryEditView.name = 'StoryEditView';

    function StoryEditView(story, editor) {
      this.story = story;
      this.editor = editor;
      this.setupLiveUpdate = __bind(this.setupLiveUpdate, this);

      this.populateAuthors = __bind(this.populateAuthors, this);

      this.renderRightPane = __bind(this.renderRightPane, this);

      this.onHashChange = __bind(this.onHashChange, this);

      this.renderRightPane();
      this.onHashChange();
      $(window).bind('hashchange', this.onHashChange);
    }

    StoryEditView.prototype.onHashChange = function() {
      return this.setActiveTab(window.location.hash ? window.location.hash : '#nav-content');
    };

    StoryEditView.prototype.setActiveTab = function(tab) {
      this.editor.find('.tab-content').html('');
      this.editor.find('.nav-pills li').removeClass('active');
      switch (tab) {
        case '#nav-settings':
          this.editor.find('.nav-pills li.nav-settings').addClass('active');
          return new SocialTypist.StoryEditView.SettingsPane(this.story, this.editor, this);
        case '#nav-content':
          this.editor.find('.nav-pills li.nav-content').addClass('active');
          return new SocialTypist.StoryEditView.ContentPane(this.story, this.editor, this);
        case '#nav-messages':
          this.editor.find('.nav-pills li.nav-messages').addClass('active');
          return new SocialTypist.StoryEditView.MessagesPane(this.story, this.editor, this);
        case '#nav-history':
          this.editor.find('.nav-pills li.nav-history').addClass('active');
          return new SocialTypist.StoryEditView.HistoryPane(this.story, this.editor, this);
        case '#nav-forks':
          this.editor.find('.nav-pills li.nav-history').addClass('active');
          return new SocialTypist.StoryEditView.ForksPane(this.story, this.editor, this);
      }
    };

    StoryEditView.prototype.renderRightPane = function() {
      this.populateAuthors();
      return this.setupLiveUpdate();
    };

    StoryEditView.prototype.populateAuthors = function() {
      var authorsContainer, authorsElem, fn,
        _this = this;
      authorsContainer = this.editor.find('.rpane .authors');
      authorsContainer.html('\
            <h3>Authors</h3>\
            <ul class="iconic-summary"></ul>');
      authorsElem = authorsContainer.find('ul');
      fn = function(list, userType) {
        var author, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = list.length; _i < _len; _i++) {
          author = list[_i];
          _results.push(authorsElem.append("                    <li>                        <div class=\"icon\">                            <img src=\"http://graph.facebook.com/" + author.domainid + "/picture?type=square\" />                        </div>                        <div class=\"summary\">                            <h3>" + author.name + "</h3>                            <p>" + userType + "</p>                        </div>                    </li>"));
        }
        return _results;
      };
      fn(this.story.cache.owners, 'Owner');
      return fn(this.story.cache.authors, 'Author');
    };

    StoryEditView.prototype.setupLiveUpdate = function() {};

    return StoryEditView;

  })();

  this.SocialTypist.StoryEditView = StoryEditView;

}).call(this);
